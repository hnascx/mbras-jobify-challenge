{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hnascx/Projects/Tests/mbras/jobify/frontend/src/components/Pagination.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  ChevronLeft,\n  ChevronRight,\n  ChevronsLeft,\n  ChevronsRight,\n} from \"lucide-react\"\n\ninterface PaginationProps {\n  currentPage: number\n  totalPages: number\n  itemsPerPage: number\n  totalItems: number\n  onPageChange: (page: number) => void\n  onItemsPerPageChange: (items: number) => void\n}\n\nexport function Pagination({\n  currentPage,\n  totalPages,\n  itemsPerPage,\n  totalItems,\n  onPageChange,\n  onItemsPerPageChange,\n}: PaginationProps) {\n  const startItem = (currentPage - 1) * itemsPerPage + 1\n  const endItem = Math.min(currentPage * itemsPerPage, totalItems)\n\n  return (\n    <div className=\"flex flex-col sm:flex-row items-center justify-between gap-4 py-4\">\n      <div className=\"text-sm text-muted-foreground\">\n        Exibindo{\" \"}\n        <span className=\"font-medium text-foreground\">\n          vagas de {startItem} a {endItem}\n        </span>{\" \"}\n        <span className=\"font-medium text-foreground\">\n          ({totalItems} resultados)\n        </span>{\" \"}\n      </div>\n\n      <div className=\"flex items-center space-x-2\">\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            className=\"border-green-400 cursor-pointer hover:border-green-500 transition-colors duration-200\"\n            size=\"icon\"\n            onClick={() => onPageChange(1)}\n            disabled={currentPage === 1}\n          >\n            <ChevronsLeft className=\"h-4 w-4 text-green-400 hover:text-green-500 transition-colors duration-200\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            className=\"border-green-400 cursor-pointer hover:border-green-500 transition-colors duration-200\"\n            size=\"icon\"\n            onClick={() => onPageChange(currentPage - 1)}\n            disabled={currentPage === 1}\n          >\n            <ChevronLeft className=\"h-4 w-4 text-green-400 hover:text-green-500 transition-colors duration-200\" />\n          </Button>\n          <span className=\"text-sm\">\n            Página {currentPage} de {totalPages}\n          </span>\n          <Button\n            variant=\"outline\"\n            className=\"border-green-400 cursor-pointer hover:border-green-500 transition-colors duration-200\"\n            size=\"icon\"\n            onClick={() => onPageChange(currentPage + 1)}\n            disabled={currentPage === totalPages}\n          >\n            <ChevronRight className=\"h-4 w-4 text-green-400 hover:text-green-500 transition-colors duration-200\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            className=\"border-green-400 cursor-pointer hover:border-green-500 transition-colors duration-200\"\n            size=\"icon\"\n            onClick={() => onPageChange(totalPages)}\n            disabled={currentPage === totalPages}\n          >\n            <ChevronsRight className=\"h-4 w-4 text-green-400 hover:text-green-500 transition-colors duration-200\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAHA;;;;AAmBO,SAAS,WAAW,KAOT;QAPS,EACzB,WAAW,EACX,UAAU,EACV,YAAY,EACZ,UAAU,EACV,YAAY,EACZ,oBAAoB,EACJ,GAPS;IAQzB,MAAM,YAAY,CAAC,cAAc,CAAC,IAAI,eAAe;IACrD,MAAM,UAAU,KAAK,GAAG,CAAC,cAAc,cAAc;IAErD,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAI,WAAU;;oBAAgC;oBACpC;kCACT,4TAAC;wBAAK,WAAU;;4BAA8B;4BAClC;4BAAU;4BAAI;;;;;;;oBAClB;kCACR,4TAAC;wBAAK,WAAU;;4BAA8B;4BAC1C;4BAAW;;;;;;;oBACP;;;;;;;0BAGV,4TAAC;gBAAI,WAAU;0BACb,cAAA,4TAAC;oBAAI,WAAU;;sCACb,4TAAC,qIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,WAAU;4BACV,MAAK;4BACL,SAAS,IAAM,aAAa;4BAC5B,UAAU,gBAAgB;sCAE1B,cAAA,4TAAC,6SAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;;;;;;sCAE1B,4TAAC,qIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,WAAU;4BACV,MAAK;4BACL,SAAS,IAAM,aAAa,cAAc;4BAC1C,UAAU,gBAAgB;sCAE1B,cAAA,4TAAC,2SAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;;;;;;sCAEzB,4TAAC;4BAAK,WAAU;;gCAAU;gCAChB;gCAAY;gCAAK;;;;;;;sCAE3B,4TAAC,qIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,WAAU;4BACV,MAAK;4BACL,SAAS,IAAM,aAAa,cAAc;4BAC1C,UAAU,gBAAgB;sCAE1B,cAAA,4TAAC,6SAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;;;;;;sCAE1B,4TAAC,qIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,WAAU;4BACV,MAAK;4BACL,SAAS,IAAM,aAAa;4BAC5B,UAAU,gBAAgB;sCAE1B,cAAA,4TAAC,+SAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMrC;KApEgB","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///Users/hnascx/Projects/Tests/mbras/jobify/frontend/src/hooks/useDebounce.ts"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\n\nexport function useDebounce<T>(value: T, delay: number = 500): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n "],"names":[],"mappings":";;;AAEA;;AAFA;;AAIO,SAAS,YAAe,KAAQ;QAAE,QAAA,iEAAgB;;IACvD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAK;IAExD,CAAA,GAAA,4RAAA,CAAA,YAAS,AAAD;iCAAE;YACR,MAAM,QAAQ;+CAAW;oBACvB,kBAAkB;gBACpB;8CAAG;YAEH;yCAAO;oBACL,aAAa;gBACf;;QACF;gCAAG;QAAC;QAAO;KAAM;IAEjB,OAAO;AACT;GAdgB","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Users/hnascx/Projects/Tests/mbras/jobify/frontend/src/lib/api.ts"],"sourcesContent":["import axios from \"axios\"\n\nconst USER_ID_KEY = \"@jobify:userId\"\n\nexport const api = axios.create({\n  baseURL: \"http://localhost:3001/api\",\n})\n\n// Interceptor para adicionar o userId em todas as requisições\napi.interceptors.request.use((config) => {\n  const userId = localStorage.getItem(USER_ID_KEY)\n\n  if (userId) {\n    config.headers[\"X-User-Id\"] = userId\n  }\n\n  return config\n})\n\n// Tipos para as respostas da API\nexport interface Job {\n  id: number\n  title: string\n  company_name: string\n  company_logo: string\n  category: string\n  description: string\n  url: string\n}\n\nexport interface JobsResponse {\n  jobs: Job[]\n  total: number\n  page: number\n  totalPages: number\n}\n\n// Funções de API\nexport const jobsApi = {\n  list: async (params?: {\n    category?: string\n    search?: string\n    page?: number\n  }) => {\n    const response = await api.get<JobsResponse>(\"/jobs\", { params })\n    return response.data\n  },\n\n  getById: async (id: string) => {\n    const response = await api.get<Job>(`/job/${id}`)\n    return response.data\n  },\n\n  getFavorites: async () => {\n    const response = await api.get<Job[]>(\"/favorited-jobs\")\n    return response.data\n  },\n\n  toggleFavorite: async (jobId: string) => {\n    const response = await api.post<{ favorited: boolean }>(\n      \"/favorited-jobs/toggle\",\n      {\n        jobId,\n      }\n    )\n    return response.data\n  },\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc;AAEb,MAAM,MAAM,gNAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC9B,SAAS;AACX;AAEA,8DAA8D;AAC9D,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5B,MAAM,SAAS,aAAa,OAAO,CAAC;IAEpC,IAAI,QAAQ;QACV,OAAO,OAAO,CAAC,YAAY,GAAG;IAChC;IAEA,OAAO;AACT;AAqBO,MAAM,UAAU;IACrB,MAAM,OAAO;QAKX,MAAM,WAAW,MAAM,IAAI,GAAG,CAAe,SAAS;YAAE;QAAO;QAC/D,OAAO,SAAS,IAAI;IACtB;IAEA,SAAS,OAAO;QACd,MAAM,WAAW,MAAM,IAAI,GAAG,CAAM,AAAC,QAAU,OAAH;QAC5C,OAAO,SAAS,IAAI;IACtB;IAEA,cAAc;QACZ,MAAM,WAAW,MAAM,IAAI,GAAG,CAAQ;QACtC,OAAO,SAAS,IAAI;IACtB;IAEA,gBAAgB,OAAO;QACrB,MAAM,WAAW,MAAM,IAAI,IAAI,CAC7B,0BACA;YACE;QACF;QAEF,OAAO,SAAS,IAAI;IACtB;AACF","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///Users/hnascx/Projects/Tests/mbras/jobify/frontend/src/hooks/useFavoriteJobs.ts"],"sourcesContent":["import { api } from \"@/lib/api\"\nimport { queryClient } from \"@/lib/query\"\nimport { useMutation, useQuery } from \"@tanstack/react-query\"\nimport { toast } from \"sonner\"\n\ninterface FavoriteJob {\n  jobId: string\n}\n\ninterface ToggleResponse {\n  isFavorited: boolean\n}\n\nexport function useFavoriteJobs(userId: string | null) {\n  return useQuery({\n    queryKey: [\"favoriteJobs\", userId],\n    queryFn: async () => {\n      if (!userId) return []\n      const response = await api.get<FavoriteJob[]>(\"/favorited-jobs\", {\n        headers: { \"X-User-Id\": userId },\n      })\n      return response.data\n    },\n    enabled: !!userId,\n  })\n}\n\nexport function useToggleFavorite(userId: string | null) {\n  return useMutation({\n    mutationFn: async (jobId: string) => {\n      if (!userId) throw new Error(\"User ID is required\")\n      const response = await api.post<ToggleResponse>(\n        \"/favorited-jobs/toggle\",\n        { jobId },\n        { headers: { \"X-User-Id\": userId } }\n      )\n      return response.data\n    },\n    onSuccess: (data) => {\n      // Invalida o cache das queries relacionadas\n      queryClient.invalidateQueries({ queryKey: [\"favoriteJobs\"] })\n      queryClient.invalidateQueries({ queryKey: [\"job\"] })\n      queryClient.invalidateQueries({ queryKey: [\"jobs\"] })\n\n      // Exibe o toast apropriado\n      toast.success(\n        data.isFavorited\n          ? \"Vaga adicionada aos favoritos\"\n          : \"Vaga removida dos favoritos\"\n      )\n    },\n    onError: () => {\n      toast.error(\"Erro ao atualizar favoritos\")\n    },\n  })\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AACA;;;;;;AAUO,SAAS,gBAAgB,MAAqB;;IACnD,OAAO,CAAA,GAAA,8QAAA,CAAA,WAAQ,AAAD,EAAE;QACd,UAAU;YAAC;YAAgB;SAAO;QAClC,OAAO;wCAAE;gBACP,IAAI,CAAC,QAAQ,OAAO,EAAE;gBACtB,MAAM,WAAW,MAAM,oHAAA,CAAA,MAAG,CAAC,GAAG,CAAgB,mBAAmB;oBAC/D,SAAS;wBAAE,aAAa;oBAAO;gBACjC;gBACA,OAAO,SAAS,IAAI;YACtB;;QACA,SAAS,CAAC,CAAC;IACb;AACF;GAZgB;;QACP,8QAAA,CAAA,WAAQ;;;AAaV,SAAS,kBAAkB,MAAqB;;IACrD,OAAO,CAAA,GAAA,iRAAA,CAAA,cAAW,AAAD,EAAE;QACjB,UAAU;6CAAE,OAAO;gBACjB,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;gBAC7B,MAAM,WAAW,MAAM,oHAAA,CAAA,MAAG,CAAC,IAAI,CAC7B,0BACA;oBAAE;gBAAM,GACR;oBAAE,SAAS;wBAAE,aAAa;oBAAO;gBAAE;gBAErC,OAAO,SAAS,IAAI;YACtB;;QACA,SAAS;6CAAE,CAAC;gBACV,4CAA4C;gBAC5C,sHAAA,CAAA,cAAW,CAAC,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAe;gBAAC;gBAC3D,sHAAA,CAAA,cAAW,CAAC,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAM;gBAAC;gBAClD,sHAAA,CAAA,cAAW,CAAC,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAO;gBAAC;gBAEnD,2BAA2B;gBAC3B,2QAAA,CAAA,QAAK,CAAC,OAAO,CACX,KAAK,WAAW,GACZ,kCACA;YAER;;QACA,OAAO;6CAAE;gBACP,2QAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACd;;IACF;AACF;IA5BgB;;QACP,iRAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///Users/hnascx/Projects/Tests/mbras/jobify/frontend/src/hooks/useJobs.ts"],"sourcesContent":["import { api } from \"@/lib/api\"\nimport { useQuery } from \"@tanstack/react-query\"\n\ninterface Job {\n  id: number\n  title: string\n  company_name: string\n  company_logo: string | null\n  category: string\n  candidate_required_location: string\n  description: string\n}\n\ninterface JobsResponse {\n  jobs: Job[]\n  totalJobs: number\n}\n\nexport function useJobs(page: number, category?: string, search?: string) {\n  return useQuery({\n    queryKey: [\"jobs\", page, category, search],\n    queryFn: async () => {\n      const params = new URLSearchParams()\n      if (search) params.append(\"search\", search)\n      if (category && category !== \"all\") params.append(\"category\", category)\n      params.append(\"page\", page.toString())\n      params.append(\"limit\", \"20\")\n\n      const response = await api.get<JobsResponse>(`/jobs?${params.toString()}`)\n      return response.data\n    },\n  })\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAiBO,SAAS,QAAQ,IAAY,EAAE,QAAiB,EAAE,MAAe;;IACtE,OAAO,CAAA,GAAA,8QAAA,CAAA,WAAQ,AAAD,EAAE;QACd,UAAU;YAAC;YAAQ;YAAM;YAAU;SAAO;QAC1C,OAAO;gCAAE;gBACP,MAAM,SAAS,IAAI;gBACnB,IAAI,QAAQ,OAAO,MAAM,CAAC,UAAU;gBACpC,IAAI,YAAY,aAAa,OAAO,OAAO,MAAM,CAAC,YAAY;gBAC9D,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ;gBACnC,OAAO,MAAM,CAAC,SAAS;gBAEvB,MAAM,WAAW,MAAM,oHAAA,CAAA,MAAG,CAAC,GAAG,CAAe,AAAC,SAA0B,OAAlB,OAAO,QAAQ;gBACrE,OAAO,SAAS,IAAI;YACtB;;IACF;AACF;GAdgB;;QACP,8QAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///Users/hnascx/Projects/Tests/mbras/jobify/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Pagination } from \"@/components/Pagination\"\nimport { useDebounce } from \"@/hooks/useDebounce\"\nimport { useFavoriteJobs, useToggleFavorite } from \"@/hooks/useFavoriteJobs\"\nimport { useJobs } from \"@/hooks/useJobs\"\nimport { useUserId } from \"@/hooks/useUserId\"\nimport { useSearchParams } from \"next/navigation\"\nimport { useState } from \"react\"\n\nexport default function Home() {\n  const searchParams = useSearchParams()\n  const userId = useUserId()\n  const [search, setSearch] = useState(searchParams.get(\"search\") || \"\")\n  const [category, setCategory] = useState(\n    searchParams.get(\"category\") || \"all\"\n  )\n  const [currentPage, setCurrentPage] = useState(1)\n  const itemsPerPage = 20\n\n  const debouncedSearch = useDebounce(search)\n\n  const { data, isLoading } = useJobs(currentPage, category, debouncedSearch)\n  const { data: favoriteJobs = [] } = useFavoriteJobs(userId)\n  const toggleFavorite = useToggleFavorite(userId)\n\n  const handleFavoriteToggle = async (jobId: number) => {\n    if (!userId) return\n    await toggleFavorite.mutateAsync(jobId.toString())\n  }\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page)\n    window.scrollTo({ top: 0, behavior: \"smooth\" })\n  }\n\n  return (\n    <div className=\"space-y-7\">\n      <JobFilters\n        search={search}\n        category={category}\n        isLoading={isLoading}\n        onSearchChange={setSearch}\n        onCategoryChange={setCategory}\n      />\n\n      <JobStats\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        totalJobs={data?.totalJobs || 0}\n      />\n\n      <JobList\n        jobs={data?.jobs}\n        isLoading={isLoading}\n        favoritedJobIds={favoriteJobs.map((fav) => fav.jobId)}\n        onFavoriteClick={handleFavoriteToggle}\n      />\n\n      {data?.jobs.length ? (\n        <nav aria-label=\"Paginação\">\n          <Pagination\n            currentPage={currentPage}\n            totalPages={Math.ceil((data?.totalJobs || 0) / itemsPerPage)}\n            itemsPerPage={itemsPerPage}\n            totalItems={data?.totalJobs || 0}\n            onPageChange={handlePageChange}\n            onItemsPerPageChange={() => {}} // Não permitimos mais mudar o número de itens por página\n          />\n        </nav>\n      ) : null}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAUe,SAAS;;IACtB,MAAM,eAAe,CAAA,GAAA,oQAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,CAAA,GAAA,4HAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE,aAAa,GAAG,CAAC,aAAa;IACnE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EACrC,aAAa,GAAG,CAAC,eAAe;IAElC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,eAAe;IAErB,MAAM,kBAAkB,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD,EAAE;IAEpC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD,EAAE,aAAa,UAAU;IAC3D,MAAM,EAAE,MAAM,eAAe,EAAE,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD,EAAE;IACpD,MAAM,iBAAiB,CAAA,GAAA,kIAAA,CAAA,oBAAiB,AAAD,EAAE;IAEzC,MAAM,uBAAuB,OAAO;QAClC,IAAI,CAAC,QAAQ;QACb,MAAM,eAAe,WAAW,CAAC,MAAM,QAAQ;IACjD;IAEA,MAAM,mBAAmB,CAAC;QACxB,eAAe;QACf,OAAO,QAAQ,CAAC;YAAE,KAAK;YAAG,UAAU;QAAS;IAC/C;IAEA,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBACC,QAAQ;gBACR,UAAU;gBACV,WAAW;gBACX,gBAAgB;gBAChB,kBAAkB;;;;;;0BAGpB,4TAAC;gBACC,aAAa;gBACb,cAAc;gBACd,WAAW,CAAA,iBAAA,2BAAA,KAAM,SAAS,KAAI;;;;;;0BAGhC,4TAAC;gBACC,IAAI,EAAE,iBAAA,2BAAA,KAAM,IAAI;gBAChB,WAAW;gBACX,iBAAiB,aAAa,GAAG,CAAC,CAAC,MAAQ,IAAI,KAAK;gBACpD,iBAAiB;;;;;;YAGlB,CAAA,iBAAA,2BAAA,KAAM,IAAI,CAAC,MAAM,kBAChB,4TAAC;gBAAI,cAAW;0BACd,cAAA,4TAAC,mIAAA,CAAA,aAAU;oBACT,aAAa;oBACb,YAAY,KAAK,IAAI,CAAC,CAAC,CAAA,iBAAA,2BAAA,KAAM,SAAS,KAAI,CAAC,IAAI;oBAC/C,cAAc;oBACd,YAAY,CAAA,iBAAA,2BAAA,KAAM,SAAS,KAAI;oBAC/B,cAAc;oBACd,sBAAsB,KAAO;;;;;;;;;;uBAG/B;;;;;;;AAGV;GA/DwB;;QACD,oQAAA,CAAA,kBAAe;QACrB,4HAAA,CAAA,YAAS;QAQA,8HAAA,CAAA,cAAW;QAEP,0HAAA,CAAA,UAAO;QACC,kIAAA,CAAA,kBAAe;QAC5B,kIAAA,CAAA,oBAAiB;;;KAdlB","debugId":null}}]
}